{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","App.js","reportWebVitals.js","index.js"],"names":["Event","Component","EventList","events","this","props","className","map","event","id","CitySearch","state","query","suggestions","handleInputChanged","value","target","setState","type","onChange","suggestion","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAOeA,G,6KAHX,OAAO,4B,GAFSC,cCwCLC,E,uKAdD,IACEC,EAAWC,KAAKC,MAAhBF,OACR,OACE,oBAAIG,UAAU,YAAd,SACGH,EAAOI,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMC,a,GANLR,aCQTS,E,4MAhCbC,MAAQ,CACNC,MAAM,GACNC,YAAa,I,EAGfC,mBAAqB,SAACN,GACpB,IAAMO,EAAQP,EAAMQ,OAAOD,MAC3B,EAAKE,SAAS,CAAEL,MAAOG,K,uDAIvB,OACE,sBAAKT,UAAU,aAAf,UACE,uBACEY,KAAK,OACLZ,UAAU,OACVS,MAAOX,KAAKO,MAAMC,MAClBO,SAAUf,KAAKU,qBAEjB,qBAAIR,UAAU,cAAd,UACLF,KAAKO,MAAME,YAAYN,KAAI,SAACa,GAAD,OAC1B,6BAAsBA,GAAbA,MAEX,6BACE,gDADM,OAJF,c,GApBiBnB,aCqDVoB,E,uKATX,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALUL,aChCHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d586061.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  render() {\n    return <div></div>;\n  }\n}\nexport default Event;","/*\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Event from './Event';\n\nconst EventList = ({ events }) => {\n  return (!events) ? null : (\n      <ul className='EventList'>\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n  )\n}\n \nEventList.propTypes = {\n  events: PropTypes.array.isRequired,\n};\n\nexport default EventList;\n*/\n\nimport React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n          <ul className=\"EventList\">\n            {events.map(event =>\n              <li key={event.id}>\n                <Event event={event} />\n              </li>\n            )}\n          </ul>\n        );\n      }\n}\n\nexport default EventList; ","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query:'',\n    suggestions: [],\n  }\n  // new between here and ...\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n  }\n  // here\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className=\"suggestions\">\n  {this.state.suggestions.map((suggestion) => (\n    <li key={suggestion}>{suggestion}</li>\n  ))}\n  <li key='all'>\n    <b>See all cities</b>\n  </li>;\n</ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","/*\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport { mockData } from './mock-data';\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch />\n        <EventList events={mockData} />\n      </div>\n    );\n  }\n}\nexport default App;\n*/\n/*\n// src/App.js\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch />\n        <EventList />\n      </div>\n    );\n  }\n}\n\nexport default App;*/\n\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch />\n        <EventList />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}