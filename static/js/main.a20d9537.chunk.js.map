{"version":3,"sources":["CitySearch.js","Event.js","EventList.js","Alert.js","NumberOfEvents.js","mock-data.js","api.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","serviceWorker.js","index.js"],"names":["CitySearch","state","query","suggestions","showSuggestions","handleInputChanged","event","setState","value","target","props","locations","filter","location","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","className","type","this","onChange","placeholder","style","display","map","onClick","Component","Event","showDetails","onDetailsButtonClicked","prevState","start","dateTime","end","summary","description","href","htmlLink","EventList","events","id","Alert","getStyle","color","fontStyle","text","ErrorAlert","NumberOfEvents","number","infoText","mockData","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","getToken","encodeCode","encodeURIComponent","fetch","then","res","json","catch","access_token","setItem","result","getEvents","NProgress","startsWith","done","token","removeQuery","url","JSON","stringify","history","pushState","pathname","newurl","protocol","host","App","currentLocation","numberOfEvents","eventCount","response","slice","mounted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.a20d9537.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: false,\n  };\n\n  handleInputChanged = (event) => {\n    this.setState({ showSuggestions: true });\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n\n    return this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      suggestions: [],\n      showSuggestions: false,\n    });\n    this.props.updateEvents(suggestion, null);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          placeholder=\"City\"\n        />\n        {/* <ul className= {this.state.showSuggestions ? \"suggestions showSuggestions\" : \"display-none\"}> */}\n        <ul\n          className=\"suggestions\"\n          style={\n            this.state.showSuggestions\n              ? {}\n              : { display: 'none' }\n          }> \n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n          \n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  onDetailsButtonClicked = () => {\n    this.setState((prevState) => ({\n      showDetails: !prevState.showDetails,\n    }));\n  };\n\n  render() {\n    const event = this.props.event;\n    return (\n      <div className=\"event\">\n        <p className=\"time\">\n          {event.start.dateTime} - {event.end.dateTime}\n        </p>\n        <p className=\"summary\">{event.summary}</p>\n        {this.state.showDetails && (\n          <div className=\"extra\">\n            <p className=\"location\">{event.location}</p>\n            <p className=\"description\">{event.description}</p>\n            <a className=\"htmlLink\" href={event.htmlLink}>\n              Event Link\n            </a>\n          </div>\n        )}\n        <button className=\"details-btn\" onClick={this.onDetailsButtonClicked}>\n          Details\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontStyle: 'italic',\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass OfflineAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'green';\n  }\n  getStyle = () => {\n    return {\n      color: this.color,\n      fontStyle: 'italic',\n    };\n  }\n}\n\nclass WarningAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'orange';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nexport { InfoAlert, OfflineAlert, WarningAlert, ErrorAlert };","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n  state = {\n    number: 32\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ number: value });\n    this.props.updateEvents(null, null, value);\n  }\n\n  render() {\n    const { number } = this.state;\n    return(\n      <div className=\"numberOfEvents\">\n        <input\n          type=\"text\"\n          id=\"number_input\"\n          value={number}\n          onChange={this.handleInputChanged}\n        />\n        <ErrorAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181161784712000\\\"\",\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:17:46.000Z\",\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\n   \"summary\": \"Learn JavaScript\",\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in Berlin? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n   \"location\": \"Berlin, Germany\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   }\n  },\n  {\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181159875584000\\\"\",\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:14:30.000Z\",\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\n   \"summary\": \"React is Fun\",\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n   \"location\": \"London, UK\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/London\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n    \"timeZone\": \"Europe/London\"\n   },\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/London\"\n   },\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   },\n  },\n];\n\nexport { mockData };\n","import { mockData } from './mock-data'\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://sybi7s2uaf.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://sybi7s2uaf.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData)};\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://sybi7s2uaf.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};","import React, { Component } from \"react\";\nimport CitySearch from \"./CitySearch\";\nimport EventList from \"./EventList\";\nimport \"./App.css\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, extractLocations } from \"./api\";\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    currentLocation: \"all\",\n    locations: [],\n    numberOfEvents: 32,\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((response) => {\n      if (this.mounted) {\n        this.setState({\n          events: response.events,\n          locations: response.locations\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  \n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((response) => {\n        const locationEvents =\n          (location === \"all\")\n            ? response.events\n            : response.events.filter((event) => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: response.events,\n          currentLocation: location,\n          locations: response.locations,\n        });\n      });\n    } else {\n      getEvents().then((response) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? response.events\n            : response.events.filter(\n                (event) => event.location === currentLocation\n              );\n        const events = locationEvents.slice(0, eventCount);\n        return this.setState({\n          events: events,\n          numberOfEvents: eventCount,\n          locations: response.locations,\n        });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch\n          updateEvents={this.updateEvents}\n          locations={this.state.locations}\n        />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/serviceWorker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }","// created myself on Dec. 15th, since it hadn't existed.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/serviceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'ServiceWorker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\nserviceWorker.register();\n\n//4.6\natatus.config('9d2555348474414d9ea27bcd7b0381fd').install();\n//atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}